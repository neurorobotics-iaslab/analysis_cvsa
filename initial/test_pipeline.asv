%% Test the features extracted and all the pipeline
% works with only ne file
clc; clear all; close all;

%% uploading data, gdf and classifier
path_data = '/home/paolo/cvsa_ws/record/c7/20250217/test';
gdf_files = dir(fullfile(path_data, '*.gdf'));
csv_features = load([path_data '/features.csv']);
csv_featuresReceived = load([path_data '/features_received.csv']);
csv_qdaProbs = load([path_data '/qdaProbs.csv']);
csv_integratedProbs = load([path_data '/integratedProbs.csv']);

yaml_QDA_path = [path_data '/qda_c7_lbp_20250217.yaml'];
qda = loadQDA(yaml_QDA_path);

% variables of the feedback and for processing
filterOrder = qda.filterOrder;
sampleRate = qda.samplerate;
bufferSize = 512;
bufferSize_feedback = 64;
bands = {[8 10] [10 12] [12 14] [14 16] [8 14]};
bands_features = qda.bands;
chunkSize = 32;
idx_selchs = qda.idchans;
nchannels = 39;
nbands = size(bands, 2);
signals = cell(1, nbands);
for idx_band = 1:nbands
    signals{idx_band}.data = [];
end

%% processing of gdf file
for idx_file=1:length(gdf_files)
    disp(['Loaded file: ' gdf_files(idx_file).name]);
    c_file = [path_data '/' gdf_files(idx_file).name];
    [s,header] = sload(c_file);
    signal = s(:,1:nchannels);

    for idx_band = 1:nbands
        band = bands{idx_band};
        [signal_processed, header_processed] = processing_offline(signal, header, nchannels, bufferSize, filterOrder, band, chunkSize);
        signals{idx_band}.data = cat(1, signals{idx_band}.data, signal_processed(:,:));
    end

    all_features = features_extraction(signals, bands, bands_features, idx_selchs);

    offset = bufferSize/chunkSize;
    all_features = all_features(offset:end,:);
    diff_features = max(csv_features - all_features(1:size(csv_features, 1),:), [], 'all');

    nfeatures = size(all_features, 1);
    all_qdaProbs = [];
    for idx_feature = 1:nfeatures
        feature = all_features(idx_feature,:);
        prob = apply_qda(qda, feature);
        all_qdaProbs = cat(1, all_qdaProbs, prob);
    end
    
    diff_probs = max(csv_qdaProbs - all_qdaProbs(1:size(csv_qdaProbs, 1),:), [], 'all');

    disp(['Features diff: ' num2str(diff_features)]);
    disp(['QDA probs diff: ' num2str(diff_probs)]);

    figure();
    for idx_feature=1:size(all_features,2)
        subplot(size(all_features,2), 1, idx_feature);
        plot(csv_features(:,idx_feature), 'Color', 'b');
        hold on
        plot(all_features(offset:size(csv_features, 1)+offset - 1,idx_feature), 'Color', 'r');
        legend('Ros feature', 'Matlab feature');
        title(['Feature: ' num2str(idx_feature)])
    end
    sgtitle(['Features | overll max diff: ' num2str(diff_features)])

    figure();
    subplot(2, 1, 1);
    plot(csv_qdaProbs(:,1), 'Color', 'b')
    hold on
    plot(all_qdaProbs(:,1), 'Color', 'r')
    title(['QDA probs | overall max diff in the probabilities: ' num2str(diff_probs)])
    subplot(2,1,2)
    plot(csv_integratedProbs(:,1), 'Color', 'b')
    hold on
    plot(all_integratedProbs(:,1), 'Color','r')
    title('Integrated probs')
    %}
 
end